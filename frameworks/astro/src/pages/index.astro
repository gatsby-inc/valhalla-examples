---
import Layout from "../layouts/Layout.astro";
import Animals from "../components/Animals.astro";
import Card from "../components/Card.astro";
import { client } from '../lib/client'

const QUERY = `
query {
  allContentfulAnimal(limit: 8, skip: 0, sort: { fields: name }) {
	nodes {
	  id
	  name
	  animalType
	  about {
		about
	  }
	  image {
		url
	  }
	}
  }
}
`;

const result = await client.query(QUERY).toPromise()
---

<Layout title="Welcome to Astro.">
  <div class="filter-and-search">
    <div class="filters">
      <button class="filter-button">All Snugglers</button>
      <button class="filter-button">Dogs</button>
      <button class="filter-button">Cats</button>
      <button class="filter-button">Exotics</button>
    </div>
    <div class="search-container">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="search-icon-svg">
        <g stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M11 19.1758C15.4183 19.1758 19 15.5941 19 11.1758C19 6.7575 15.4183 3.17578 11 3.17578C6.58172 3.17578 3 6.7575 3 11.1758C3 15.5941 6.58172 19.1758 11 19.1758Z"></path>
          <path d="M21.0004 21.1742L16.6504 16.8242"></path>
        </g>
      </svg>
      <input type="search" placeholder="Search pets" class="search">
    </div>
  </div>
  <section class="animals-list">
    {
      result.data.allContentfulAnimal.nodes.map((an) => {
        return (
          <Animals
            name={an.name}
            image={an.image}
            type={an.animalType}
            about={an.about}
          />
        );
      })
    }
  </section>
  <nav class="page-nav">
    {
      [
        ...Array(result.data?.allContentfulAnimal?.pageInfo?.pageCount).keys(),
      ].map((i) => {
        return (
          <a href="/" class="page-link">
            {i + 1}
          </a>
        );
      })
    }
  </nav>
</Layout>

<style>
  .page-link {
    border-radius: var(--radius-2);
    text-decoration: none;
    font-weight: var(--font-weight-5);
    position: relative;
    display: block;
    padding: var(--size-2) var(--size-3);
    font-size: var(--font-size-2);
    transition-property: color, background-color;
    transition-duration: 0.15s;
    transition-timing-function: ease-in-out;
    color: var(--color-fg);
    background: var(--color-bg-calm);

    :hover {
      background: var(--color-accent-muted);
      color: var(--color-accent);
    }
  }
  .page-nav {
    margin: var(--size-6) 0;
    display: flex;
    flex-direction: row;
    gap: var(--size-3);
    list-style: none;
    padding: 0;
  }

  .animals-list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    margin: var(--size-5) 0;
    padding-bottom: var(--size-5);
    gap: var(--size-6);
    justify-content: space-between;
  }

  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }

  .filter-and-search {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    position: sticky;
    top: 0;
    z-index: 1;
    background-image: linear-gradient(to bottom, rgba(var(--color-bg-rgb), 1), rgba(var(--color-bg-rgb), 0.95));
  }

  .filters {
    display: flex;
    margin: var(--size-3) 0;
    gap: var(--size-3);
    align-items: center;
  }

  .filter-button {
    background: transparent;
    border-radius: var(--radius-5);
    border: none;
    font-size: var(--font-size-2);
    cursor: pointer;
    font-weight: var(--font-weight-7);
    padding: var(--size-1) calc(var(--size-1) + var(--size-2));
    color: var(--color-fg-calm);

    :hover {
      background: var(--color-accent-muted);
      color: var(--color-accent);
      box-shadow: var(--shadow-elevation-low);
    }

    .active {
      background: var(--color-bg);
      color: var(--color-accent);
      box-shadow: var(--shadow-elevation-large);
    }
  }

  .search-container {
    background: var(--color-bg-muted);
    border-radius: var(--radius-100);
    position: relative;
    color: var(--color-fg-calm);
    border: 1px solid #0000;

    :hover {
      border: 1px solid #00000010;
    }

    :focus-within {
      border: 1px solid #00000015;
      background: var(--color-bg);
    }
  }

  .search {
    border-radius: var(--radius-3);
    border: none;
    background: none;
    padding: var(--size-2) var(--size-3) var(--size-2) calc(var(--size-4) + var(--size-2) + var(--size-2));
    min-height: 40px;
    outline: none;
    min-width: 280px;

    ::placeholder {
      color: var(--color-fg-calm);
    }

    ::-webkit-search-cancel-button {
      display: none;
    }
  }

  .search-icon-svg {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: calc(var(--size-1) + var(--size-2));
  }

  html {
    --size-1: 4px;
    --size-2: 8px;
    --size-3: 16px;
    --size-4: 24px;
    --size-5: 32px;
    --size-6: 48px;
    --size-7: 64px;

    --color-fg-base:         0deg, 15%;
    --color-fg:              hsl(var(--color-fg-base), 20%);
    --color-fg-calm:         hsl(var(--color-fg-base), 45%);
    --color-fg-on-emphasis:  #ffffff;

    --color-bg:              #ffffff;
    --color-bg-rgb:          255, 255, 255;
    --color-bg-muted:        hsl(var(--color-fg-base), 97%);
    --color-bg-calm:         hsl(var(--color-fg-base), 98.5%);

    --color-active-base:     360deg, 100%;
    --color-active:          hsl(var(--color-active-base), 70%);
    --color-active-muted:    hsl(var(--color-active-base), 97%);

    --font-sans: Inter, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;
    
    --lineheight-00: 1;
    --lineheight-0: 1.1;
    --lineheight-1: 1.25;
    --lineheight-2: 1.375;
    --lineheight-3: 1.5;
    --lineheight-4: 1.75;
    --lineheight-5: 2;

    --font-size-00: .5rem;
    --font-size-0: .75rem;
    --font-size-1: .875rem;
    --font-size-2: 1rem;
    --font-size-3: 1.125rem;
    --font-size-4: 1.25rem;
    --font-size-5: 1.5rem;
    --font-size-6: 2rem;

    --font-weight-1: 100;
    --font-weight-2: 200;
    --font-weight-3: 300;
    --font-weight-4: 400;
    --font-weight-5: 500;
    --font-weight-6: 600;
    --font-weight-7: 700;
    --font-weight-8: 800;
    --font-weight-9: 900;

    --radius-1: 2px;
    --radius-2: 4px;
    --radius-3: 6px;
    --radius-4: 8px;
    --radius-5: 16px;
    --radius-100: 9999px;

    --shadow-color: 0deg 0% 80%;
    --shadow-elevation-low:
      0px 0.2px 0.2px hsl(var(--shadow-color) / 0.16),
      0px 0.3px 0.3px -1.2px hsl(var(--shadow-color) / 0.16),
      0px 0.7px 0.8px -2.4px hsl(var(--shadow-color) / 0.17);
    --shadow-elevation-medium:
      0px 0.2px 0.2px hsl(var(--shadow-color) / 0.17),
      0px 0.6px 0.7px -0.8px hsl(var(--shadow-color) / 0.17),
      0px 1.5px 1.7px -1.6px hsl(var(--shadow-color) / 0.18),
      0px 3.5px 4px -2.4px hsl(var(--shadow-color) / 0.18);
    --shadow-elevation-high:
      0px 0.2px 0.2px hsl(var(--shadow-color) / 0.16),
      0px 0.8px 0.9px -0.3px hsl(var(--shadow-color) / 0.16),
      0px 1.4px 1.6px -0.7px hsl(var(--shadow-color) / 0.16),
      0px 2.2px 2.5px -1px hsl(var(--shadow-color) / 0.16),
      0px 3.5px 4px -1.4px hsl(var(--shadow-color) / 0.16),
      -0.1px 5.3px 6px -1.7px hsl(var(--shadow-color) / 0.16),
      -0.1px 8px 9.1px -2.1px hsl(var(--shadow-color) / 0.17),
      -0.1px 11.7px 13.3px -2.4px hsl(var(--shadow-color) / 0.17);

    color: var(--color-fg);
    font-family: var(--font-sans);
    line-height: var(--lineheight-3);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  }

  input,
  button {
    color: var(--color-fg);
    font-family: var(--font-sans);
    font-size: 1rem;
  }

  input::placeholder {
    color: var(--color-fg-calm);
  }
</style>
