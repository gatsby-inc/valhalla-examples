import Head from "next/head";
import React from "react";
import { Layout } from "./components/Layout";
import { AnimalDisplay, Animals } from "./components/Animals";
import {
  ContentfulDogsFieldsEnum,
  SortOrderEnum,
} from "./generated-client/types";
import { GatsbyBinding, gatsbyClient } from "./generated-client/binding";
import { client } from "./apollo";

const { ApolloProvider } = require("@apollo/client");

export function Catalog(props) {
  const [randomDog, setRandomDog] = React.useState();
  console.log(props);
  return (
    <Layout title="Our Snugglers" isDogs active="home">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <title>Pup Snuggles</title>
      </main>
      <button
        onClick={() => {
          fetch("/api/giveMeARandomDog")
            .then((res) => {
              return res.json();
            })
            .then(({ dog }) => {
              return setRandomDog(dog);
            });
        }}
      >
        Give me a random dog
      </button>

      {randomDog && <AnimalDisplay animal={randomDog} type="dogs" />}
      <Animals type={`dogs`} data={props?.nodes || []} />
    </Layout>
  );
}

export default function Root(props) {
  return (
    <ApolloProvider client={client}>
      <Catalog {...props} />
    </ApolloProvider>
  );
}

export async function getServerSideProps() {
  const dogs = await gatsbyClient.query.allContentfulDogs(
    {
      sort: {
        fields: [ContentfulDogsFieldsEnum.Name],
        order: [SortOrderEnum.Asc],
      },
    },
    `
    {
      nodes {
        id
        name
        about {
          about
        }
        image {
          url
        }
      }
    }
  `
  );

  return {
    props: dogs,
  };
}
